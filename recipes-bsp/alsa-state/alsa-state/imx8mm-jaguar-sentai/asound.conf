# ===== Minimal ALSA config for AEC =====

# ---- Physical Speaker (used by pipeline as "spk") ----
pcm.spk {
    type hw
    card tas2563audio
    device 0
}
ctl.spk { type hw card tas2563audio }

pcm.!default {
    type plug
    slave.pcm "spk"
}

ctl.!default { type hw card tas2563audio }

# ---- Physical Microphone (used by pipeline as "mic") ----
# --- Keep your existing hardware mic alias ---
pcm.mic {
    type hw
    card micfilaudio
    device 0
    channels 2
}
ctl.mic { type hw card micfilaudio }

# ---- Loopback pair 0: Azure TTS -> AEC probe ----
pcm.loop_playback_far {  # write here from Azure TTS
    type hw
    card Loopback
    device 0
    subdevice 0
}

pcm.loop_capture_far {   # read here for webrtcechoprobe
    type hw
    card Loopback
    device 1
    subdevice 0
}

# ---- Loopback pair 1: AEC output -> consumers (e.g., STT) ----
pcm.loop_playback_near {  # AEC writes cleaned audio here
    type hw
    card Loopback
    device 0
    subdevice 1
}
pcm.loop_capture_near {   # single-open reader of cleaned audio
    type hw
    card Loopback
    device 1
    subdevice 1
}

# wakeword
pcm.loop_playback_near_wake { type hw; card Loopback; device 0; subdevice 2 }
pcm.loop_capture_near_wake  { type hw; card Loopback; device 1; subdevice 2 }

# stopword
pcm.loop_playback_near_stop { type hw; card Loopback; device 0; subdevice 3 }
pcm.loop_capture_near_stop  { type hw; card Loopback; device 1; subdevice 3 }

# barge-in
pcm.loop_playback_near_barge { type hw; card Loopback; device 0; subdevice 4 }
pcm.loop_capture_near_barge  { type hw; card Loopback; device 1; subdevice 4 }

# recording
pcm.loop_playback_near_rec { type hw; card Loopback; device 0; subdevice 5 }
pcm.loop_capture_near_rec  { type hw; card Loopback; device 1; subdevice 5 }



# ===== Echo Reference from TAS2563 (reverse stream for AEC) =====
# Hardware capture endpoint for TAS2563 SDOUT (EchoRef in slots 0–1)
# NOTE: Update 'card' (and 'device' if needed) to the SAI that carries SDOUT.
pcm.eref_hw {
    type hw
    card SAI3        # <-- CHANGE to your card name (e.g., "sai3", "tas2563audio", etc.)
    device 0
}

ctl.eref_hw { type hw card SAI3 }  # <-- update to match above

# Allow multiple readers and stable 10-ms cadence from the hardware
pcm.eref_dsnoop {
    type dsnoop
    ipc_key 8473
    ipc_key_add_uid true
    ipc_perm 0666
    slave {
        pcm "eref_hw"
        channels 1
        rate 48000
        format S16_LE
        period_size 480     # 10 ms @ 48 kHz
        buffer_size 1920    # 40 ms buffer
    }
}

# Final EchoRef alias: always present as mono, S16_LE @ 48 kHz
pcm.eref {
    type plug
    slave {
        pcm "eref_dsnoop"
        rate 48000
        format S16_LE
        channels 1
    }
}
ctl.eref { type hw card SAI3 }     
