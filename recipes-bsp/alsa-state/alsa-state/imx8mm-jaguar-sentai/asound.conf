# ===== Minimal ALSA config for AEC =====

# ---- Physical Speaker (used by pipeline as "spk") ----
pcm.spk {
    type hw
    card tas2563audio
    device 0
    format S16_LE
    rate 16000
    channels 1
}
ctl.spk { type hw card tas2563audio}

pcm.spk_vc {
    type softvol
    slave.pcm "spk"
    control {
        name "Soft Speaker Volume"
        card tas2563audio
    }
    min_dB -60.0
    max_dB 0.0
    resolution 100
}

pcm.!default {
    type plug
    slave {
        pcm "spk_vc"
        format S16_LE
        rate 16000
        channels 1
    }
}

ctl.!default { type hw card tas2563audio}

# ---- Physical Microphone (auto-detects hardware variant) ----
# Primary microphone device - uses runtime detection to select source
pcm.mic {
    @func refer
    name {
        @func concat
        strings [
            "pcm."
            { @func getenv
              vars [ MIC_HW_TYPE ]
              default "micfil_mic"
            }
        ]
    }
}

ctl.mic {
    @func refer
    name {
        @func concat
        strings [
            "ctl."
            { @func getenv
              vars [ MIC_HW_TYPE ]
              default "micfil_mic"
            }
        ]
    }
}

# ---- Original Hardware: MICFIL PDM Microphones ----
pcm.micfil_mic {
    type hw
    card micfilaudio
    device 0
}
ctl.micfil_mic { type hw card micfilaudio }

# ---- Test Hardware: TAS2563 Integrated Microphones ----
# NOTE: TAS2563 microphones are not physically connected - disabled
# Dual microphone capture (stereo) - both mics accessible as L/R channels
pcm.tas2563_mic {
    type null  # Disabled - microphones not connected
    # Original config (disabled):
    # type hw
    # card tas2563audio
    # device 0
    # subdevice 1  # Capture subdevice for TAS2563 mics
    # format S16_LE
    # rate 16000
    # channels 2   # Two microphones as stereo pair
}
ctl.tas2563_mic { type hw card tas2563audio }

# Individual microphone access - Microphone 1 (Left channel)
# NOTE: Disabled - TAS2563 microphones not physically connected
pcm.tas2563_mic1 {
    type null  # Disabled - microphone not connected
    # Original config (disabled):
    # type plug
    # slave {
    #     pcm "tas2563_mic"
    #     channels 2
    # }
    # ttable.0.0 1.0  # Route left channel (mic1) to mono output
}

# Individual microphone access - Microphone 2 (Right channel)  
# NOTE: Disabled - TAS2563 microphones not physically connected
pcm.tas2563_mic2 {
    type null  # Disabled - microphone not connected
    # Original config (disabled):
    # type plug
    # slave {
    #     pcm "tas2563_mic"
    #     channels 2
    # }
    # ttable.1.0 1.0  # Route right channel (mic2) to mono output
}

# ---- TAS2563 Echo Reference Capture ----
# Echo reference from speaker output for AEC processing
pcm.tas2563_echo_ref {
    type hw
    card tas2563audio
    device 0
    subdevice 2  # Dedicated echo reference subdevice (if available)
    format S16_LE
    rate 16000
    channels 1   # Mono echo reference
}
ctl.tas2563_echo_ref { type hw card tas2563audio }

# ---- TAS2563 SDout Capture Device ----
# Direct access to TAS2563 Serial Data Output for monitoring/feedback
pcm.tas2563_sdout {
    type hw
    card tas2563audio
    device 0
    subdevice 0  # Main device for SDout (playback monitoring)
    format S16_LE
    rate 16000
    channels 1
}
ctl.tas2563_sdout { type hw card tas2563audio }

# ---- TAS2563 SDout with Volume Control ----
pcm.tas2563_sdout_vc {
    type softvol
    slave.pcm "tas2563_sdout"
    control {
        name "SDout Capture Volume"
        card tas2563audio
    }
    min_dB -60.0
    max_dB 20.0
    resolution 100
}

# ---- Loopback pair 0: Azure TTS -> AEC probe ----
pcm.loop_playback_far {  # write here from Azure TTS
    type hw
    card Loopback
    device 0
    subdevice 0
}
pcm.loop_capture_far {   # read here for webrtcechoprobe
    type hw
    card Loopback
    device 1
    subdevice 0
}

# ---- Loopback pair 1: AEC output -> consumers (e.g., STT) ----
pcm.loop_playback_near {  # AEC writes cleaned audio here
    type hw
    card Loopback
    device 0
    subdevice 1
}
pcm.loop_capture_near {   # single-open reader of cleaned audio
    type hw
    card Loopback
    device 1
    subdevice 1
}

# Optional multi-open reader of cleaned audio (use if multiple apps read it)
pcm.loop_capture_near_multi {
    type dsnoop
    ipc_key 673057
    ipc_perm 0666
    slave {
        pcm "hw:Loopback,1,1"
        format S16_LE
        rate 16000
        channels 1
    }
}

# ---- TAS2563 AEC-Ready Configuration (Echo Reference Only) ----
# NOTE: TAS2563 microphones not connected - only echo reference available
# Echo reference configuration for AEC processing (post-amplified stream)
pcm.tas2563_aec_input {
    type multi
    slaves {
        # NOTE: Microphones disabled - not physically connected
        # a { pcm "tas2563_mic1" channels 1 }      # Microphone 1 (disabled)
        # b { pcm "tas2563_mic2" channels 1 }      # Microphone 2 (disabled)
        c { pcm "tas2563_echo_ref" channels 1 }  # Echo reference (post-amp, no volume control needed)
    }
    bindings {
        # NOTE: Only echo reference available
        # 0 { slave a channel 0 }  # Channel 0: Mic1 (disabled)
        # 1 { slave b channel 0 }  # Channel 1: Mic2 (disabled)
        0 { slave c channel 0 }  # Channel 0: Echo reference only
    }
}

# AEC input with rate conversion and format standardization
# NOTE: Only echo reference channel available (TAS2563 mics not connected)
pcm.tas2563_aec_ready {
    type plug
    slave {
        pcm "tas2563_aec_input"
        format S16_LE
        rate 16000
        channels 1  # Echo reference only (mics not connected)
    }
}
