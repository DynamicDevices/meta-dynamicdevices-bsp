#!/bin/bash
# MCXC143VFM Power Microcontroller Setup Script
# Configures serial connection to MCXC143VFM on /dev/ttyLP2
# Runs once on first boot for imx93-jaguar-eink board

set -e

DEVICE="/dev/ttyLP2"
BAUDRATE="115200"
CONFIG_FILE="/etc/mcxc143.conf"
LOG_FILE="/var/log/mcxc143-setup.log"
FIRST_BOOT_FLAG="/var/lib/mcxc143/first-boot-complete"

log_message() {
    echo "$(date): $1" | tee -a "$LOG_FILE"
}

# Check if this is first boot
if [ -f "$FIRST_BOOT_FLAG" ]; then
    log_message "MCXC143VFM already configured, skipping setup"
    exit 0
fi

log_message "Starting MCXC143VFM power microcontroller setup..."

# Wait for device to be available
TIMEOUT=30
COUNTER=0
while [ ! -c "$DEVICE" ] && [ $COUNTER -lt $TIMEOUT ]; do
    log_message "Waiting for $DEVICE to become available... ($COUNTER/$TIMEOUT)"
    sleep 1
    COUNTER=$((COUNTER + 1))
done

if [ ! -c "$DEVICE" ]; then
    log_message "ERROR: $DEVICE not found after ${TIMEOUT}s timeout"
    exit 1
fi

log_message "Found $DEVICE, configuring serial parameters..."

# Configure serial port parameters
if command -v stty >/dev/null 2>&1; then
    # Set serial port parameters: 115200 baud, 8N1, no flow control
    stty -F "$DEVICE" \
        "$BAUDRATE" \
        cs8 \
        -cstopb \
        -parenb \
        -crtscts \
        -ixon \
        -ixoff \
        raw \
        -echo \
        -echoe \
        -echok \
        -echoctl \
        -echoke \
        min 1 \
        time 0
    
    log_message "Serial port $DEVICE configured: ${BAUDRATE} baud, 8N1, no flow control"
else
    log_message "WARNING: stty not available, cannot configure serial parameters"
fi

# Set appropriate permissions for the device
if [ -c "$DEVICE" ]; then
    chmod 666 "$DEVICE" || log_message "WARNING: Failed to set permissions on $DEVICE"
    log_message "Set permissions 666 on $DEVICE"
fi

# Create configuration file
cat > "$CONFIG_FILE" << EOF
# MCXC143VFM Power Microcontroller Configuration
# Generated on $(date)

# Serial Device Configuration
DEVICE=$DEVICE
BAUDRATE=$BAUDRATE
DATA_BITS=8
PARITY=none
STOP_BITS=1
FLOW_CONTROL=none

# MCXC143VFM Functions
# - WiFi/BT power control and sequencing
# - Battery monitoring and fuel gauge  
# - System power management and wake scheduling
# - 5-year battery life optimization algorithms

# Communication Protocol
# - ASCII command interface
# - Line-based protocol (CR/LF terminated)
# - Response timeout: 1000ms
# - Retry count: 3

# Power Management Commands (examples)
# PWR_WIFI_ON    - Enable WiFi module power
# PWR_WIFI_OFF   - Disable WiFi module power  
# PWR_BT_ON      - Enable Bluetooth power
# PWR_BT_OFF     - Disable Bluetooth power
# BAT_STATUS     - Get battery status
# BAT_VOLTAGE    - Get battery voltage
# SYS_SLEEP      - Enter low power mode
# SYS_WAKE       - Exit low power mode

EOF

log_message "Created configuration file: $CONFIG_FILE"

# Test basic communication with MCXC143VFM
log_message "Testing communication with MCXC143VFM..."

# Send a simple status command and check for response
if command -v timeout >/dev/null 2>&1; then
    # Try to get device status (non-blocking test)
    echo "STATUS" > "$DEVICE" 2>/dev/null || log_message "WARNING: Failed to send test command"
    
    # Read response with timeout
    if timeout 2s cat "$DEVICE" 2>/dev/null | head -1 | grep -q "." 2>/dev/null; then
        log_message "SUCCESS: MCXC143VFM responded to status command"
    else
        log_message "WARNING: No response from MCXC143VFM (device may be in low power mode)"
    fi
else
    log_message "INFO: timeout command not available, skipping communication test"
fi

# Create first boot completion flag
mkdir -p "$(dirname "$FIRST_BOOT_FLAG")"
touch "$FIRST_BOOT_FLAG"
log_message "Created first boot completion flag: $FIRST_BOOT_FLAG"

# Set up udev rule for persistent device configuration
UDEV_RULE="/etc/udev/rules.d/99-mcxc143.rules"
cat > "$UDEV_RULE" << EOF
# MCXC143VFM Power Microcontroller udev rule
# Maintains consistent device permissions and configuration
# Generated by mcxc143-setup on $(date)

# LPUART7 (42690000.serial) -> /dev/ttyLP2 for MCXC143VFM
SUBSYSTEM=="tty", KERNELS=="42690000.serial", SYMLINK+="mcxc143", MODE="0666", GROUP="dialout"

# Set serial parameters when device appears
SUBSYSTEM=="tty", KERNELS=="42690000.serial", RUN+="/bin/stty -F %N ${BAUDRATE} cs8 -cstopb -parenb -crtscts raw"

EOF

log_message "Created udev rule: $UDEV_RULE"

# Reload udev rules
if command -v udevadm >/dev/null 2>&1; then
    udevadm control --reload-rules || log_message "WARNING: Failed to reload udev rules"
    udevadm trigger --subsystem-match=tty || log_message "WARNING: Failed to trigger udev"
    log_message "Reloaded udev rules for MCXC143VFM device"
fi

log_message "MCXC143VFM power microcontroller setup completed successfully"

# Display setup summary
log_message "Setup Summary:"
log_message "  Device: $DEVICE"
log_message "  Baudrate: $BAUDRATE"
log_message "  Config: $CONFIG_FILE"
log_message "  Udev Rule: $UDEV_RULE"
log_message "  Symlink: /dev/mcxc143 -> $DEVICE"

exit 0
