// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/*
 * Copyright 2020 NXP
 */

#include "freescale/imx8mm-evk.dts"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/clock/imx8mm-clock.h>

/ {
        model = "i.MX8MM Jaguar Sentai board";
        compatible = "fsl,imx8mm-jaguar-sentai", "fsl,imx8mm-evk", "fsl,imx8mm";

	// Regulators
	regulator-vddext {
		compatible = "regulator-fixed";
		regulator-name = "VDDEXT_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	sound-tas2563 {
                compatible = "simple-audio-card";
                simple-audio-card,name = "tas2563-audio";
                simple-audio-card,format = "i2s";
                simple-audio-card,frame-master = <&cpudai2>;
                simple-audio-card,bitclock-master = <&cpudai2>;
                //simple-audio-card,widgets =
                //      "Line", "Left Line Out Jack",
                //      "Line", "Right Line Out Jack";
                //simple-audio-card,routing =
                //      "Left Line Out Jack", "LINEVOUTL",
                //      "Right Line Out Jack", "LINEVOUTR";

                cpudai2: simple-audio-card,cpu {
                        sound-dai = <&sai3>;
                        dai-tdm-slot-num = <2>;
                        dai-tdm-slot-width = <32>;
                };

                simple-audio-card,codec {
                        sound-dai = <&tas2563>;
                        clocks = <&clk IMX8MM_CLK_SAI3_ROOT>;
                };
        };

	// MICFIL Audio Configuration (for original PDM hardware)
	sound-micfil {
		compatible = "fsl,imx-audio-card";
		model = "micfil-audio";
		status = "okay"; /* Controlled by runtime detection */
		pri-dai-link {
			link-name = "micfil hifi";
			format = "i2s";
			cpu {
				sound-dai = <&micfil>;
			};
		};
	};

	sound-wm8524 {
		status = "disabled";
	};

	sound-ak4458 {
		status = "disabled";
	};

	sound-spdif {
		status = "disabled";
	};

	sound-bt-sco {
		status = "disabled";
	};

	sw-keys {
                compatible = "gpio-keys";
		status = "enabled";

                sw1: key-act {
                        label = "Key Act";
                        linux,code = <BTN_SELECT>;
                        gpios = <&gpio3 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			interrupt-parent = <&gpio3>;
			interrupt = <6 IRQ_TYPE_EDGE_FALLING>;
                };
	};
};

&iomuxc {
        pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	// TODO: Break these out better?
	pinctrl_hog: hoggrp {
		fsl,pins = <
			MX8MM_IOMUXC_SD1_DATA4_GPIO2_IO6	0x140  // WL_WAKE_DEV
			MX8MM_IOMUXC_SD1_DATA5_GPIO2_IO7	0x140  // BT_WAKE_DEV
			MX8MM_IOMUXC_SD1_DATA6_GPIO2_IO8	0x000  // LTE_RESET
			MX8MM_IOMUXC_NAND_CE0_B_GPIO3_IO1	0x140  // FUL_CARD_POWER_OFF#
                        MX8MM_IOMUXC_NAND_DATA01_GPIO3_IO7      0x140  // WIFI_PD#
			MX8MM_IOMUXC_NAND_DATA02_GPIO3_IO8	0x140  // BT_WAKE_HOST
                        MX8MM_IOMUXC_NAND_DATA03_GPIO3_IO9      0x140  // BT_RST#
			MX8MM_IOMUXC_SAI1_RXD4_GPIO4_IO6	0x140  // SLMB_0
                        MX8MM_IOMUXC_SAI1_RXD7_GPIO4_IO9        0x140  // LED_ENABLE
                        MX8MM_IOMUXC_SAI1_TXFS_GPIO4_IO10       0x140  // CODEC_IRQ#
                        MX8MM_IOMUXC_SAI2_RXC_GPIO4_IO22        0x140  // ZB_INT
                        MX8MM_IOMUXC_SPDIF_RX_GPIO5_IO4         0x140  // CODEC_SD#
                        MX8MM_IOMUXC_SD1_STROBE_GPIO2_IO11      0x140  // ZB_RST#
		>;
	};

        pinctrl_ecspi1: ecspi1grp {
                fsl,pins = <
			MX8MM_IOMUXC_ECSPI1_SS0_GPIO5_IO9	0x13
                        MX8MM_IOMUXC_ECSPI1_SCLK_ECSPI1_SCLK	0x13
                        MX8MM_IOMUXC_ECSPI1_MISO_ECSPI1_MISO	0x13
                        MX8MM_IOMUXC_ECSPI1_MOSI_ECSPI1_MOSI	0x13
                >;
        };

        pinctrl_ecspi2: ecspi2grp {
                fsl,pins = <
			MX8MM_IOMUXC_ECSPI2_SS0_GPIO5_IO13	0x96
                        MX8MM_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK	0x96
                        MX8MM_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI	0x96
			MX8MM_IOMUXC_ECSPI2_MISO_ECSPI2_MISO	0x96
			MX8MM_IOMUXC_SAI3_RXC_GPIO4_IO29	0x96  // RADAR_IRQ
			MX8MM_IOMUXC_SAI3_RXFS_GPIO4_IO28	0x96 // RADAR_RST
                >;
        };

	pinctrl_pdm: pdmgrp {
		fsl,pins = <
			MX8MM_IOMUXC_SAI1_MCLK_PDM_CLK		0xd6
			MX8MM_IOMUXC_SAI1_RXD0_PDM_DATA0	0xd6
			MX8MM_IOMUXC_SAI1_RXD1_PDM_DATA1	0xd6
			MX8MM_IOMUXC_SAI1_RXD2_PDM_DATA2	0xd6
			MX8MM_IOMUXC_SAI1_RXD3_PDM_DATA3	0xd6
		>;
	};

        pinctrl_sai2: sai2grp {
                fsl,pins = <
                        MX8MM_IOMUXC_SAI2_MCLK_SAI2_MCLK        0xd6
                        MX8MM_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC     0xd6
                        MX8MM_IOMUXC_SAI2_TXC_SAI2_TX_BCLK      0xd6
                        MX8MM_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0    0xd6
                        MX8MM_IOMUXC_SAI2_RXD0_SAI2_RX_DATA0    0xd6
                >;
        };

        pinctrl_sai3: sai3grp {
                fsl,pins = <
                        MX8MM_IOMUXC_SAI3_TXFS_SAI3_TX_SYNC     0xd6    // Frame sync
                        MX8MM_IOMUXC_SAI3_TXC_SAI3_TX_BCLK      0xd6    // Bit clock
                        MX8MM_IOMUXC_SAI3_MCLK_SAI3_MCLK        0xd6    // Master clock
                        MX8MM_IOMUXC_SAI3_TXD_SAI3_TX_DATA0     0xd6    // Transmit (playback)
                        MX8MM_IOMUXC_SAI3_RXD_SAI3_RX_DATA0     0xd6    // Receive (from TAS2563 mics)
                        MX8MM_IOMUXC_SPDIF_EXT_CLK_GPIO5_IO5    0xd6    // Audio codec interrupt
                >;
        };

        pinctrl_uart1: uart1grp {
                fsl,pins = <
                        MX8MM_IOMUXC_UART1_RXD_UART1_DCE_RX     0x140
                        MX8MM_IOMUXC_UART1_TXD_UART1_DCE_TX     0x140
                        MX8MM_IOMUXC_UART3_TXD_UART1_DCE_RTS_B  0x140
                        MX8MM_IOMUXC_UART3_RXD_UART1_DCE_CTS_B  0x140
                >;
        };
};

&uart1 { /* BT */
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_uart1>;
        assigned-clocks = <&clk IMX8MM_CLK_UART1>;
        assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
        fsl,uart-has-rtscts;
        status = "okay";

        bluetooth {
                compatible = "nxp,88w8997-bt";
		fw-init-baudrate = <3000000>;
        };
};

&uart3 {
	status = "disabled";
};

&gpio2 {
	wl-wake-dev-hog {
		gpio-hog;
		gpios = <6 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "wl-wake-dev";
	};
	bt-wake-dev-hog {
		gpio-hog;
		gpios = <7 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "bt-wake-dev";
	};
//        zb-reset-hog {
//                gpio-hog;
//                gpios = <11 GPIO_ACTIVE_LOW>;
//                output-low;
//                line-name = "zb-reset";
//        };
};

&gpio3 {
	lte-power-down-hog {
		gpio-hog;
		gpios = <1 GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "lte-power-down";
	};

	wlan-power-down-hog {
		gpio-hog;
		gpios = <7 GPIO_ACTIVE_LOW>;
		output-low;
		line-name = "wlan-power-down#";
	};
	bt-wake-host-hog {
		gpio-hog;
		gpios = <8 GPIO_ACTIVE_HIGH>;
		input;
		line-name = "bt-wake-host";
	};
	bt-reset-hog {
		gpio-hog;
		gpios = <9 GPIO_ACTIVE_LOW>;
		output-low;
		line-name = "bt-reset";
	};
};

//&gpio4 {
//       zb-int-hog {
//		gpio-hog;
//		gpios = <22 GPIO_ACTIVE_HIGH>;
//		input;
//		line-name = "zb-int";
//       };
//};

&gpio5 {
       audio-shutdown-hog {
		gpio-hog;
		gpios = <4 GPIO_ACTIVE_LOW>;
		output-low;
		line-name = "tas2563-shutdown";
       };
};

&fec1 {
        status = "disabled";
};

&i2c1 {
	sht40: sht40@44 {
		compatible = "sensirion,sht4x";
                reg = <0x44>;
		status = "okay";
	};
};

&i2c2 {
        ptn5110: tcpc@50 {
                status = "disabled";
	};

	// Audio Amp with Dual Hardware Support
        tas2563: tas2563@4C {
                #sound-dai-cells = <0>;
                compatible = "ti,tas2563";
                reg = <0x4C>;
                ti,channels = <1>; /* channel number */
                reset-gpios = <&gpio5 4 GPIO_ACTIVE_HIGH>;  /* Enable reset control */
                interrupt-parent = <&gpio5>;
                interrupts = <5 IRQ_TYPE_LEVEL_LOW>;
                
                // I2S Configuration (common for both hardware variants)
                ti,asi-format = <0>; /* 0, i2S; 1, DSP;  */
                ti,left-slot = <0>; /* <left slot number> */
                ti,right-slot = <1>; /* <right slot number> */
                ti,imon-slot-no = <0>; /* <current sense slot number> */
                ti,vmon-slot-no = <2>; /* <current voltage slot number> */
                ti,echo-ref = <2>;
                ti,bypass-tmax = <1>; /* 0, not bypass; 1, bypass */
                ti,i2s-bits = <32>;
                
                // PDM Microphone Configuration (for test hardware)
                // Runtime configurable - will be enabled/disabled by userspace
                ti,mic-mode = <0>; /* 0=disabled initially, 1=enabled for test HW */
                ti,mic-bias-enable = <0>; /* Microphone bias - runtime configurable */
                ti,mic-gain = <0x10>; /* Microphone input gain */
                ti,pdm-edge = <3>; /* Both rising and falling edge for dual mics */
                ti,pdm-clk-rate = <3072000>; /* PDM clock rate (3.072 MHz) */
                ti,pdm-data-width = <16>; /* PDM data width */
                ti,mic-left-edge = <0>; /* Left mic on rising edge */
                ti,mic-right-edge = <1>; /* Right mic on falling edge */
                
                status = "okay";
        };
};

&i2c3 {
	stts22h: stts22h@3F {
		compatible = "st,stts22h";
                reg = <0x3f>;
//		sampling-rate = <STTS22H_100Hz>;
		status = "okay";
		interrupt-parent = <&gpio4>;
		interrupts = <8 IRQ_TYPE_LEVEL_HIGH>;
	};

	led-controller@28 {
            #address-cells = <1>;
            #size-cells = <0>;
            compatible = "ti,lp5024";
            reg = <0x28>;
            enable-gpios = <&gpio4 9 GPIO_ACTIVE_HIGH>;

            multi-led@0 {
                #address-cells = <1>;
                #size-cells = <0>;
		label = "led5";
                reg = <0>;
//                default-intensity = <100 0 0>;
                color = <LED_COLOR_ID_RGB>;
                function = LED_FUNCTION_INDICATOR;
                led@0 {
                     reg = <0>;
                     color = <LED_COLOR_ID_RED>;
                };

                led@1 {
                     reg = <1>;
                     color = <LED_COLOR_ID_GREEN>;
                };

                led@2 {
                     reg = <2>;
                     color = <LED_COLOR_ID_BLUE>;
                };
            };

            multi-led@1 {
                #address-cells = <1>;
                #size-cells = <0>;
		label = "led1";
                reg = <1>;
//                default-intensity = <100 0 0>;
                color = <LED_COLOR_ID_RGB>;
                function = LED_FUNCTION_INDICATOR;
                led@0 {
                     reg = <12>;
                     color = <LED_COLOR_ID_RED>;
                };

                led@1 {
                     reg = <13>;
                     color = <LED_COLOR_ID_GREEN>;
                };

                led@2 {
                     reg = <14>;
                     color = <LED_COLOR_ID_BLUE>;
                };
            };

	    multi-led@2 {
                #address-cells = <1>;
                #size-cells = <0>;
		label = "led2";
                reg = <2>;
//                default-intensity = <100 0 0>;
                color = <LED_COLOR_ID_RGB>;
                function = LED_FUNCTION_INDICATOR;
                led@0 {
                     reg = <15>;
                     color = <LED_COLOR_ID_RED>;
                };

                led@1 {
                     reg = <16>;
                     color = <LED_COLOR_ID_GREEN>;
                };

                led@2 {
                     reg = <17>;
                     color = <LED_COLOR_ID_BLUE>;
                };
            };

            multi-led@3 {
                #address-cells = <1>;
                #size-cells = <0>;
		label = "led3";
                reg = <3>;
//                default-intensity = <100 0 0>;
                color = <LED_COLOR_ID_RGB>;
                function = LED_FUNCTION_INDICATOR;
                led@0 {
                     reg = <3>;
                     color = <LED_COLOR_ID_RED>;
                };

                led@1 {
                     reg = <4>;
                     color = <LED_COLOR_ID_GREEN>;
                };

                led@2 {
                     reg = <5>;
                     color = <LED_COLOR_ID_BLUE>;
                };
            };

            multi-led@4 {
                #address-cells = <1>;
                #size-cells = <0>;
		label = "led4";
                reg = <4>;
//                default-intensity = <100 0 0>;
                color = <LED_COLOR_ID_RGB>;
                function = LED_FUNCTION_INDICATOR;
                led@0 {
                     reg = <6>;
                     color = <LED_COLOR_ID_RED>;
                };

                led@1 {
                     reg = <7>;
                     color = <LED_COLOR_ID_GREEN>;
                };

                led@2 {
                     reg = <8>;
                     color = <LED_COLOR_ID_BLUE>;
                };
            };

            multi-led@5 {
                #address-cells = <1>;
                #size-cells = <0>;
		label = "led0";
                reg = <5>;
//                default-intensity = <100 0 0>;
                color = <LED_COLOR_ID_RGB>;
                function = LED_FUNCTION_INDICATOR;
                led@0 {
                     reg = <9>;
                     color = <LED_COLOR_ID_RED>;
                };

                led@1 {
                     reg = <10>;
                     color = <LED_COLOR_ID_GREEN>;
                };

                led@2 {
                     reg = <11>;
                     color = <LED_COLOR_ID_BLUE>;
                };
            };
        };

	ov5640_mipi: ov5640_mipi@3c {
		status = "disabled";
	};

	pca6416: gpio@20 {
		status = "disabled";
	};

        ak4458_1: ak4458@10 {
		status = "disabled";
	};

        ak4458_2: ak4458@12 {
		status = "disabled";
	};

        ak5558: ak5558@13 {
		status = "disabled";
	};

        ak4497: ak4497@11 {
		status = "disabled";
	};

};

&sai1 {
	status = "disabled"; /* Disabled to avoid pin conflicts with TAS2563 audio */
};

// MICFIL for original hardware PDM microphones
&micfil {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pdm>;
	assigned-clocks = <&clk IMX8MM_CLK_PDM>;
	assigned-clock-parents = <&clk IMX8MM_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <49152000>;
	status = "okay"; /* Both hardware variants - runtime managed */
};

// Enhanced SAI3 configuration for dual hardware support
&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clk IMX8MM_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MM_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <12288000>;
	fsl,sai-mclk-direction-output;
	fsl,sai-synchronous-rx;  /* Enable receive for TAS2563 microphones */
	status = "okay";
};

&mipi_dsi {
       status = "disabled";
};

&spdif1 {
       status = "disabled";
};

&pcie0 {
       status = "disabled";
};

// 802.15.4
&ecspi1 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	cs-gpios = <&gpio5 9 GPIO_ACTIVE_LOW>;
        fsl,spi-num-chipselects = <1>;
	status = "okay";

        spidev1: spi@0 {
		compatible = "rohm,dh2228fv";
                spi-max-frequency = <12000000>;
                reg = <0>;
        };
};

// BGT 60TR13C E6327 radar
&ecspi2 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
        fsl,spi-num-chipselects = <1>;
	status = "okay";

        spidev0: spi@0 {
		compatible = "rohm,dh2228fv";
                spi-max-frequency = <50000000>;
                reg = <0>;
        };
};

&flexspi {
	status = "disabled";
};

// USB-C port
&usbotg1 {
	dr_mode = "host";
        status = "okay";
};

// Cellular modem
&usbotg2 {
	dr_mode = "host";
        status = "okay";
};
