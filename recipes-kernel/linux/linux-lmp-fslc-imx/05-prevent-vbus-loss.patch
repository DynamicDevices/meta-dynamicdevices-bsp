diff --git a/drivers/usb/typec/tcpm/tcpci.c b/drivers/usb/typec/tcpm/tcpci.c
index 7ba1c59d14a2..2580ef1c47d2 100644
--- a/drivers/usb/typec/tcpm/tcpci.c
+++ b/drivers/usb/typec/tcpm/tcpci.c
@@ -498,6 +498,7 @@ static int tcpci_vbus_force_discharge(struct tcpc_dev *tcpc, bool enable)
 static int tcpci_set_vbus(struct tcpc_dev *tcpc, bool source, bool sink)
 {
 	struct tcpci *tcpci = tcpc_to_tcpci(tcpc);
+	unsigned int reg;
 	int ret;
 
 	if (tcpci->data->set_vbus) {
@@ -507,16 +508,20 @@ static int tcpci_set_vbus(struct tcpc_dev *tcpc, bool source, bool sink)
 			return ret < 0 ? ret : 0;
 	}
 
+	ret = regmap_read(tcpci->regmap, TCPC_POWER_STATUS, &reg);
+	if (ret < 0)
+		return ret;
+
 	/* Disable both source and sink first before enabling anything */
 
-	if (!source) {
+	if (!source && (reg & TCPC_POWER_STATUS_SOURCING_VBUS)) {
 		ret = regmap_write(tcpci->regmap, TCPC_COMMAND,
 				   TCPC_CMD_DISABLE_SRC_VBUS);
 		if (ret < 0)
 			return ret;
 	}
 
-	if (!sink) {
+	if (!sink && (reg & TCPC_POWER_STATUS_SINKING_VBUS)) {
 		ret = regmap_write(tcpci->regmap, TCPC_COMMAND,
 				   TCPC_CMD_DISABLE_SINK_VBUS);
 		if (ret < 0)
diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c
index 96bb7e72d376..66857bdafcbe 100644
--- a/drivers/usb/typec/tcpm/tcpm.c
+++ b/drivers/usb/typec/tcpm/tcpm.c
@@ -340,6 +340,7 @@ struct tcpm_port {
 	 */
 	bool vbus_vsafe0v;
 
+	bool vbus_keep;
 	bool vbus_never_low;
 	bool vbus_source;
 	bool vbus_charge;
@@ -3758,7 +3759,8 @@ static void tcpm_reset_port(struct tcpm_port *port)
 	port->rx_msgid = -1;
 
 	port->tcpc->set_pd_rx(port->tcpc, false);
-	tcpm_init_vbus(port);	/* also disables charging */
+	if (!port->vbus_keep)
+ 		tcpm_init_vbus(port);  /* also disables charging */
 	tcpm_init_vconn(port);
 	tcpm_set_current_limit(port, 0, 0);
 	tcpm_set_polarity(port, TYPEC_POLARITY_CC1);
@@ -5992,6 +5994,9 @@ static void tcpm_init(struct tcpm_port *port)
 
 	port->tcpc->init(port->tcpc);
 
+	port->vbus_present = port->tcpc->get_vbus(port->tcpc);
+	if (port->vbus_present)
+              port->vbus_keep = true;
 	tcpm_reset_port(port);
 
 	/*
@@ -6030,7 +6035,9 @@ static void tcpm_init(struct tcpm_port *port)
 	 * Some adapters need a clean slate at startup, and won't recover
 	 * otherwise. So do not try to be fancy and force a clean disconnect.
 	 */
-	tcpm_set_state(port, PORT_RESET, 0);
+	if (!port->vbus_keep)
+		tcpm_set_state(port, PORT_RESET, 0);
+	port->vbus_keep = false;
 }
 
 static int tcpm_port_type_set(struct typec_port *p, enum typec_port_type type)
